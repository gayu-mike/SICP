#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 122 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 7 #"Monaco\0"
0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 178 178 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 197 110 195 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 224 33 29 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 79 151 215 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.5 0.5 0.5 1 1 1 216 216 216 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 138 255 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 79 151 215 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 42 161 174 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 45 149 116 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 42 161 174 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 164 91 173 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 92 92 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 0 0 0 0 0 -1 -1 2
42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 105 105 105 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 224 33 29 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 178 178 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 220 117 47 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 79 151 215 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 220 117 47 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 242 36 31 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 242 36 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 68 0 160 0 0 0 -1 -1
2 31 #"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 163 29 177 0 0 0 -1 -1 2
47 #"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 40 222 240 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 103 177 29 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 220 117 47 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 177 149 29 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 178 178 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 178 178 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 32
#"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 61 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 185 220 113 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 155 255 155 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 116 116 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 18 67 155 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 30 70 190 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 75 135 185 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 208 208 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 116 116 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 125 255 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 143 15 223 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 141 19 5 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 244 194 71 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 127 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 86 86 86 0 0 0 -1 -1 0 1
#"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 101 83 112 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 108 65 115 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 224 33 29 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 58 129 195 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 58 129 195 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 42 161 174 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 45 149 116 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 78 49 99 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 148 162
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 101 83 112 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 220 117 47 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 242 36 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 163 29 177 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 33 184 199 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 103 177 29 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 177 149 29 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
251 248 239 -1 -1 0 36 #"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
251 248 239 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
251 248 239 -1 -1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
251 248 239 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 178 178
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 197 110 195
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 224 33 29 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 79 151 215 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.5 0.5 0.5 1.0 1.0 1.0 216 216 216
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 79 151 215 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 42 161 174 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 45 149 116 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 164 91 173 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 105 105 105
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 222 240 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1           0 2538 0 29 3 10 #"#lang sicp"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"#%require"
0 0 26 3 2 #" ("
0 0 14 3 4 #"only"
0 0 26 3 1 #" "
0 0 14 3 11 #"racket/base"
0 0 26 3 1 #" "
0 0 14 3 9 #"make-hash"
0 0 26 3 1 #" "
0 0 14 3 8 #"hash-ref"
0 0 26 3 1 #" "
0 0 14 3 9 #"hash-set!"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 8 #";; table"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 1 #" "
0 0 32 3 7 #"*table*"
0 0 26 3 2 #" ("
0 0 38 3 9 #"make-hash"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 3 #"get"
0 0 26 3 1 #" "
0 0 32 3 2 #"op"
0 0 26 3 1 #" "
0 0 32 3 4 #"type"
0 0 26 3 3 #") ("
0 0 38 3 8 #"hash-ref"
0 0 26 3 1 #" "
0 0 32 3 7 #"*table*"
0 0 26 3 2 #" ("
0 0 38 3 4 #"list"
0 0 26 3 1 #" "
0 0 32 3 2 #"op"
0 0 26 3 1 #" "
0 0 32 3 4 #"type"
0 0 26 3 2 #") "
0 0 22 3 2 #"#f"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 3 #"put"
0 0 26 3 1 #" "
0 0 32 3 2 #"op"
0 0 26 3 1 #" "
0 0 32 3 4 #"type"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 3 #") ("
0 0 38 3 9 #"hash-set!"
0 0 26 3 1 #" "
0 0 32 3 7 #"*table*"
0 0 26 3 2 #" ("
0 0 38 3 4 #"list"
0 0 26 3 1 #" "
0 0 32 3 2 #"op"
0 0 26 3 1 #" "
0 0 32 3 4 #"type"
0 0 26 3 2 #") "
0 0 32 3 4 #"proc"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 12 #";; primitive"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 1 #" "
0 0 32 3 5 #"prims"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         562 22 2 #"(\0"
2 #")\0"
111 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"st"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"cadr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"cadr"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #">"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #">"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"<"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"<"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"assoc"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"assoc"
7 #"wxtext\0"
3 2 #"))"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 5 #"true?"
0 0 26 3 1 #" "
0 0 32 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"not"
0 0 26 3 2 #" ("
0 0 38 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 32 3 1 #"x"
0 0 26 3 1 #" "
0 0 22 3 2 #"#f"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 6 #"false?"
0 0 26 3 1 #" "
0 0 32 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 32 3 1 #"x"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 14 #";; environment"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"make-frame"
0 0 26 3 1 #" "
0 0 32 3 4 #"vars"
0 0 26 3 1 #" "
0 0 32 3 4 #"vals"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cons"
0 0 26 3 1 #" "
0 0 32 3 4 #"vars"
0 0 26 3 1 #" "
0 0 32 3 4 #"vals"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"frame-vars"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 3 #") ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"frame-vals"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 3 #") ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 1 #" "
0 0 32 3 9 #"empty-env"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 26 3 3 #"())"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"first-frame"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 3 #") ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 12 #"external-env"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 3 #") ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 5 #"bind!"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 1 #" "
0 0 32 3 3 #"val"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 8 #"set-car!"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 2 #" ("
0 0 38 3 4 #"cons"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 2 #" ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 8 #"set-cdr!"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 2 #" ("
0 0 38 3 4 #"cons"
0 0 26 3 1 #" "
0 0 32 3 3 #"val"
0 0 26 3 2 #" ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 5 #"frame"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 21 #"lookup-variable-value"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         552 22 2 #"(\0"
2 #")\0"
109 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"de"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"ine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"external-env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"           ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"\"Unbound variable: \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"           ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 5 #"scope"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"first-frame"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"frame-vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"scope"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                   ("
7 #"wxtext\0"
3 10 #"frame-vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"scope"
7 #"wxtext\0"
3 6 #")))]))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 32 3 4 #"loop"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 19 #"set-variable-value!"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 1 #" "
0 0 32 3 3 #"val"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         522 22 2 #"(\0"
2 #")\0"
103 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"external-env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"set-car!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"val"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"empty-env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"\"Unbound variable: \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"first-frame"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"frame-vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 10 #"frame-vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 32 3 4 #"loop"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 16 #"define-variable!"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 1 #" "
0 0 32 3 3 #"val"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         422 22 2 #"(\0"
2 #")\0"
83 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"le"
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"first-frame"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 5 #"bind!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"val"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 8 #"set-car!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"val"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"frame-vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 10 #"frame-vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 3 #")))"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"extend-env"
0 0 26 3 1 #" "
0 0 32 3 4 #"vars"
0 0 26 3 1 #" "
0 0 32 3 4 #"vals"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         207 22 2 #"(\0"
2 #")\0"
40 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"co"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"length"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"length"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-frame"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 27 #"\"Too many / Too few args: \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 3 #")])"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 16 #"setup-global-env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 8 #"builtins"
0 0 26 3 2 #" ("
0 0 32 3 10 #"extend-env"
0 0 26 3 2 #" ("
0 0 32 3 10 #"prim-names"
0 0 26 3 3 #") ("
0 0 32 3 10 #"prim-procs"
0 0 26 3 2 #") "
0 0 32 3 9 #"empty-env"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 32 3 16 #"define-variable!"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 4 #"true"
0 0 26 3 1 #" "
0 0 38 3 4 #"true"
0 0 26 3 1 #" "
0 0 32 3 8 #"builtins"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 32 3 16 #"define-variable!"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 5 #"false"
0 0 26 3 1 #" "
0 0 38 3 5 #"false"
0 0 26 3 1 #" "
0 0 32 3 8 #"builtins"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 32 3 8 #"builtins"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 17 #";; data structure"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 32 3 3 #"tag"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         117 22 2 #"(\0"
2 #")\0"
22 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"pair?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"exp"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"tag"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"exp"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"      "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #")"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 16 #"self-evaluating?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         132 22 2 #"(\0"
2 #")\0"
25 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"co"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 7 #"number?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"exp"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 7 #"string?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"exp"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 2 #"])"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 7 #"quoted?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 5 #"quote"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"quoted-text"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 9 #"variable?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 7 #"symbol?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 3 #"if?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 2 #"if"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 12 #"if-predicate"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 13 #"if-consequent"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 5 #"caddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 14 #"if-alternative"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 3 #"not"
0 0 26 3 2 #" ("
0 0 38 3 5 #"null?"
0 0 26 3 2 #" ("
0 0 38 3 5 #"cdddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 38 3 6 #"cadddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 38 3 1 #"'"
0 0 14 3 5 #"false"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 7 #"make-if"
0 0 26 3 1 #" "
0 0 32 3 9 #"predicate"
0 0 26 3 1 #" "
0 0 32 3 10 #"consequent"
0 0 26 3 1 #" "
0 0 32 3 11 #"alternative"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 4 #"list"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 32 3 9 #"predicate"
0 0 26 3 1 #" "
0 0 32 3 10 #"consequent"
0 0 26 3 1 #" "
0 0 32 3 11 #"alternative"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 5 #"cond?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 16 3 4 #"cond"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 8 #"cond->if"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 7 #"make-if"
0 0 26 3 1 #" "
0 0 32 3 1 #"p"
0 0 26 3 1 #" "
0 0 32 3 1 #"c"
0 0 26 3 1 #" "
0 0 32 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 4 #"list"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 32 3 1 #"p"
0 0 26 3 1 #" "
0 0 32 3 1 #"c"
0 0 26 3 1 #" "
0 0 32 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"expand-cond"
0 0 26 3 1 #" "
0 0 32 3 7 #"clauses"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 5 #"null?"
0 0 26 3 1 #" "
0 0 32 3 7 #"clauses"
0 0 26 3 2 #") "
0 0 22 3 2 #"#f"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 5 #"first"
0 0 26 3 2 #" ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 7 #"clauses"
0 0 26 3 4 #")] ["
0 0 32 3 4 #"rest"
0 0 26 3 2 #" ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 7 #"clauses"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 3 #"eq?"
0 0 26 3 2 #" ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 5 #"first"
0 0 26 3 2 #") "
0 0 38 3 1 #"'"
0 0 14 3 4 #"else"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 5 #"null?"
0 0 26 3 1 #" "
0 0 32 3 4 #"rest"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 32 3 13 #"sequence->exp"
0 0 26 3 2 #" ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 5 #"first"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 38 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 20 #"\"Clauses after else\""
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 32 3 7 #"make-if"
0 0 26 3 2 #" ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 5 #"first"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                       ("
0 0 32 3 13 #"sequence->exp"
0 0 26 3 2 #" ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 5 #"first"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                       ("
0 0 32 3 11 #"expand-cond"
0 0 26 3 1 #" "
0 0 32 3 4 #"rest"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 32 3 11 #"expand-cond"
0 0 26 3 2 #" ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 7 #"lambda?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 16 3 6 #"lambda"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 17 #"lambda-parameters"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"lambda-body"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"make-lambda"
0 0 26 3 1 #" "
0 0 32 3 10 #"parameters"
0 0 26 3 1 #" "
0 0 32 3 4 #"body"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 4 #"cons"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 38 3 4 #"cons"
0 0 26 3 1 #" "
0 0 32 3 10 #"parameters"
0 0 26 3 1 #" "
0 0 32 3 4 #"body"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 6 #"begin?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 16 3 5 #"begin"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 13 #"begin-actions"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"make-begin"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cons"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 16 3 5 #"begin"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 9 #"last-exp?"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 3 #") ("
0 0 38 3 5 #"null?"
0 0 26 3 2 #" ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 9 #"first-exp"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 3 #") ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 9 #"rest-exps"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 3 #") ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 13 #"sequence->exp"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 4 #"cond"
0 0 26 3 3 #" [("
0 0 38 3 5 #"null?"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 2 #") "
0 0 32 3 3 #"seq"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 9 #"last-exp?"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 3 #") ("
0 0 32 3 9 #"first-exp"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 38 3 4 #"else"
0 0 26 3 2 #" ("
0 0 32 3 10 #"make-begin"
0 0 26 3 1 #" "
0 0 32 3 3 #"seq"
0 0 26 3 4 #")]))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"assignment?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 4 #"set!"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 19 #"assignment-variable"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 16 #"assignment-value"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 5 #"caddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"definition?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 16 3 6 #"define"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 19 #"definition-variable"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 7 #"symbol?"
0 0 26 3 2 #" ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 38 3 5 #"caadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 16 #"definition-value"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 7 #"symbol?"
0 0 26 3 2 #" ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 38 3 5 #"caddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 32 3 11 #"make-lambda"
0 0 26 3 2 #" ("
0 0 38 3 5 #"cdadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 12 #"application?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 5 #"pair?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 8 #"operator"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 8 #"operands"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 12 #"no-operands?"
0 0 26 3 1 #" "
0 0 32 3 3 #"ops"
0 0 26 3 3 #") ("
0 0 38 3 5 #"null?"
0 0 26 3 1 #" "
0 0 32 3 3 #"ops"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 13 #"first-operand"
0 0 26 3 1 #" "
0 0 32 3 3 #"ops"
0 0 26 3 3 #") ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 3 #"ops"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 13 #"rest-operands"
0 0 26 3 1 #" "
0 0 32 3 3 #"ops"
0 0 26 3 3 #") ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 3 #"ops"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"primitive?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 3 #"eq?"
0 0 26 3 2 #" ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #") "
0 0 38 3 1 #"'"
0 0 14 3 4 #"prim"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"prim-names"
0 0 26 3 3 #") ("
0 0 38 3 3 #"map"
0 0 26 3 1 #" "
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 5 #"prims"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"prim-procs"
0 0 26 3 3 #") ("
0 0 38 3 3 #"map"
0 0 26 3 2 #" ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 32 3 1 #"p"
0 0 26 3 3 #") ("
0 0 38 3 4 #"list"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 4 #"prim"
0 0 26 3 2 #" ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 1 #"p"
0 0 26 3 4 #"))) "
0 0 32 3 5 #"prims"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 9 #"compound?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 3 #"eq?"
0 0 26 3 2 #" ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #") "
0 0 38 3 1 #"'"
0 0 14 3 4 #"proc"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"proc-params"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 9 #"proc-body"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 5 #"caddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 8 #"proc-env"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 6 #"cadddr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 9 #"make-proc"
0 0 26 3 1 #" "
0 0 32 3 6 #"params"
0 0 26 3 1 #" "
0 0 32 3 4 #"body"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 3 #") ("
0 0 38 3 4 #"list"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 32 3 6 #"params"
0 0 26 3 1 #" "
0 0 32 3 4 #"body"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 6 #";; amb"
0 0 26 29 1 #"\n"
0 0 18 3 45
(4
 #";; (amb <e1> <e2> ... "
 #"<en>) -> \344\273\273\344\270\200\345\205\203\347\264\240 e"
) 0 0 26 29 1 #"\n"
0 0 18 3 17 #";; (amb) -> error"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 4 #"amb?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 12 #"tagged-list?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 3 #"amb"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"amb-choices"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 19 #";; expression types"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 23 #"analyze-self-evaluating"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 3 #"] ("
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 14 #"analyze-quoted"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 4 #"qval"
0 0 26 3 2 #" ("
0 0 32 3 11 #"quoted-text"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 3 #"] ("
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"qval"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 16 #"analyze-variable"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 32 3 7 #"succeed"
0 0 26 3 2 #" ("
0 0 32 3 21 #"lookup-variable-value"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 2 #") "
0 0 32 3 4 #"fail"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 18 #"analyze-assignment"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 3 #"var"
0 0 26 3 2 #" ("
0 0 32 3 19 #"assignment-variable"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 32 3 5 #"vproc"
0 0 26 3 2 #" ("
0 0 32 3 7 #"analyze"
0 0 26 3 2 #" ("
0 0 32 3 16 #"assignment-value"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 14 #";(lambda [env]"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 24 #";  (set-variable-value! "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 24 #";   var (vproc env) env)"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 9 #";  'ok)))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 32 3 5 #"vproc"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"val"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 2 #"] "
0 0 18 3 19 #"; succ continuation"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 7 #"old-val"
0 0 26 3 2 #" ("
0 0 32 3 21 #"lookup-variable-value"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 18 #"                 ("
0 0 32 3 19 #"set-variable-value!"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 1 #" "
0 0 32 3 3 #"val"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 18 #"                 ("
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 26 29 1 #"\n"
0 0 26 3 27 #"                          ("
0 0 38 3 6 #"lambda"
0 0 26 3 4 #" [] "
0 0 18 3 19 #"; fail continuation"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 32 3 19 #"set-variable-value!"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 1 #" "
0 0 32 3 7 #"old-val"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 32 3 5 #"fail2"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"             "
0 0 32 3 4 #"fail"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 18 #"analyze-definition"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 3 #"var"
0 0 26 3 2 #" ("
0 0 32 3 19 #"definition-variable"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 32 3 5 #"vproc"
0 0 26 3 2 #" ("
0 0 32 3 7 #"analyze"
0 0 26 3 2 #" ("
0 0 32 3 16 #"definition-value"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 14 #";(lambda [env]"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 41 #";  (define-variable! var (vproc env) env)"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 9 #";  'ok)))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 32 3 5 #"vproc"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"val"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 32 3 16 #"define-variable!"
0 0 26 3 1 #" "
0 0 32 3 3 #"var"
0 0 26 3 1 #" "
0 0 32 3 3 #"val"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"             "
0 0 32 3 4 #"fail"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"analyze-if"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 5 #"pproc"
0 0 26 3 2 #" ("
0 0 32 3 7 #"analyze"
0 0 26 3 2 #" ("
0 0 32 3 12 #"if-predicate"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 32 3 5 #"cproc"
0 0 26 3 2 #" ("
0 0 32 3 7 #"analyze"
0 0 26 3 2 #" ("
0 0 32 3 13 #"if-consequent"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 32 3 5 #"aproc"
0 0 26 3 2 #" ("
0 0 32 3 7 #"analyze"
0 0 26 3 2 #" ("
0 0 32 3 14 #"if-alternative"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 14 #";(lambda (env)"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 26 #";  (if (true? (pproc env))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 18 #";      (cproc env)"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 22 #";      (aproc env)))))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 32 3 5 #"pproc"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 10 #"pred-value"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 32 3 5 #"true?"
0 0 26 3 1 #" "
0 0 32 3 10 #"pred-value"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 20 #"                   ("
0 0 32 3 5 #"cproc"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 20 #"                   ("
0 0 32 3 5 #"aproc"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"             "
0 0 32 3 4 #"fail"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 16 #"analyze-sequence"
0 0 26 3 1 #" "
0 0 32 3 4 #"exps"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 12 #"sequentially"
0 0 26 3 1 #" "
0 0 32 3 5 #"proc1"
0 0 26 3 1 #" "
0 0 32 3 5 #"proc2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 40 #";(lambda (env) (proc1 env) (proc2 env)))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 32 3 5 #"proc1"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 7 #"a-value"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 3 #"] ("
0 0 32 3 5 #"proc2"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"             "
0 0 32 3 4 #"fail"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 4 #"loop"
0 0 26 3 1 #" "
0 0 32 3 10 #"first-proc"
0 0 26 3 1 #" "
0 0 32 3 10 #"rest-procs"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 5 #"null?"
0 0 26 3 1 #" "
0 0 32 3 10 #"rest-procs"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 32 3 10 #"first-proc"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 32 3 4 #"loop"
0 0 26 3 2 #" ("
0 0 32 3 12 #"sequentially"
0 0 26 3 1 #" "
0 0 32 3 10 #"first-proc"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 10 #"rest-procs"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 10 #"rest-procs"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (("
0 0 32 3 5 #"procs"
0 0 26 3 2 #" ("
0 0 38 3 3 #"map"
0 0 26 3 1 #" "
0 0 32 3 7 #"analyze"
0 0 26 3 1 #" "
0 0 32 3 4 #"exps"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 5 #"null?"
0 0 26 3 1 #" "
0 0 32 3 5 #"procs"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 38 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 25 #"\"Empty sequence: ANALYZE\""
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 32 3 4 #"loop"
0 0 26 3 2 #" ("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 5 #"procs"
0 0 26 3 3 #") ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 5 #"procs"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 14 #"analyze-lambda"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 4 #"vars"
0 0 26 3 2 #" ("
0 0 32 3 17 #"lambda-parameters"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 32 3 5 #"bproc"
0 0 26 3 2 #" ("
0 0 32 3 16 #"analyze-sequence"
0 0 26 3 2 #" ("
0 0 32 3 11 #"lambda-body"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 32 3 7 #"succeed"
0 0 26 3 2 #" ("
0 0 32 3 9 #"make-proc"
0 0 26 3 1 #" "
0 0 32 3 4 #"vars"
0 0 26 3 1 #" "
0 0 32 3 5 #"bproc"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 2 #") "
0 0 32 3 4 #"fail"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 6 #";; key"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 11 #"analyze-amb"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 6 #"cprocs"
0 0 26 3 2 #" ("
0 0 38 3 3 #"map"
0 0 26 3 1 #" "
0 0 32 3 7 #"analyze"
0 0 26 3 2 #" ("
0 0 32 3 11 #"amb-choices"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 8 #"try-next"
0 0 26 3 1 #" "
0 0 32 3 7 #"choices"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 5 #"null?"
0 0 26 3 1 #" "
0 0 32 3 7 #"choices"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 32 3 4 #"fail"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"            (("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 7 #"choices"
0 0 26 3 2 #") "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 27 #"                           "
0 0 32 3 7 #"succeed"
0 0 26 29 1 #"\n"
0 0 26 3 28 #"                           ("
0 0 38 3 6 #"lambda"
0 0 26 3 5 #" [] ("
0 0 32 3 8 #"try-next"
0 0 26 3 2 #" ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 7 #"choices"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 32 3 8 #"try-next"
0 0 26 3 1 #" "
0 0 32 3 6 #"cprocs"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 19 #"analyze-application"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 8 #"get-args"
0 0 26 3 1 #" "
0 0 32 3 6 #"aprocs"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 5 #"null?"
0 0 26 3 1 #" "
0 0 32 3 6 #"aprocs"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 26 3 3 #"() "
0 0 32 3 4 #"fail"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 38 3 3 #"car"
0 0 26 3 1 #" "
0 0 32 3 6 #"aprocs"
0 0 26 3 2 #") "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                      ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"arg"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 25 #"                        ("
0 0 32 3 8 #"get-args"
0 0 26 3 2 #" ("
0 0 38 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 32 3 6 #"aprocs"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 34 #"                                  "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                  ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 4 #"args"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail3"
0 0 26 3 3 #"] ("
0 0 32 3 7 #"succeed"
0 0 26 3 2 #" ("
0 0 38 3 4 #"cons"
0 0 26 3 1 #" "
0 0 32 3 3 #"arg"
0 0 26 3 1 #" "
0 0 32 3 4 #"args"
0 0 26 3 2 #") "
0 0 32 3 5 #"fail3"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 34 #"                                  "
0 0 32 3 5 #"fail2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 22 #"                      "
0 0 32 3 4 #"fail"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 5 #"fproc"
0 0 26 3 2 #" ("
0 0 32 3 7 #"analyze"
0 0 26 3 2 #" ("
0 0 32 3 8 #"operator"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 32 3 6 #"aprocs"
0 0 26 3 2 #" ("
0 0 38 3 3 #"map"
0 0 26 3 1 #" "
0 0 32 3 7 #"analyze"
0 0 26 3 2 #" ("
0 0 32 3 8 #"operands"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 14 #";(lambda [env]"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 24 #";  (execute-application "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 15 #";   (fproc env)"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 18 3 5 #";   ("
0 0 18 3 3 #"map"
0 0 18 3 39 #" (lambda [aproc] (aproc env)) aprocs)))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 32 3 5 #"fproc"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 4 #"proc"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail2"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 32 3 8 #"get-args"
0 0 26 3 1 #" "
0 0 32 3 6 #"aprocs"
0 0 26 29 1 #"\n"
0 0 26 3 25 #"                         "
0 0 32 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 26 #"                         ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 4 #"args"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail3"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 28 #"                           ("
0 0 32 3 19 #"execute-application"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 1 #" "
0 0 32 3 4 #"args"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 5 #"fail3"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 25 #"                         "
0 0 32 3 5 #"fail2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"             "
0 0 32 3 4 #"fail"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 7 #";; eval"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 7 #"ambeval"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 2 #") "
0 0 18 3 31 #"; add succeed/fail continuation"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 32 3 7 #"analyze"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #") "
0 0 32 3 3 #"env"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 10 #";; analyze"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 7 #"analyze"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 4 #"cond"
0 0 26 3 3 #" [("
0 0 32 3 16 #"self-evaluating?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 23 #"analyze-self-evaluating"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 7 #"quoted?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 14 #"analyze-quoted"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 9 #"variable?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 16 #"analyze-variable"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 11 #"assignment?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 18 #"analyze-assignment"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 11 #"definition?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 18 #"analyze-definition"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 3 #"if?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 10 #"analyze-if"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 7 #"lambda?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 14 #"analyze-lambda"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 6 #"begin?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 16 #"analyze-sequence"
0 0 26 3 2 #" ("
0 0 32 3 13 #"begin-actions"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 5 #"cond?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 10 #"analyze-if"
0 0 26 3 2 #" ("
0 0 32 3 8 #"cond->if"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 4 #"amb?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 11 #"analyze-amb"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #")] "
0 0 18 3 5 #"; new"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 12 #"application?"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 32 3 19 #"analyze-application"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 38 3 4 #"else"
0 0 26 3 2 #" ("
0 0 38 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 27 #"\"Unknown expression type: \""
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 4 #")]))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 10 #";; execute"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 25 #"apply-primitive-procedure"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 1 #" "
0 0 32 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 5 #"apply"
0 0 26 3 2 #" ("
0 0 38 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 32 3 3 #"exp"
0 0 26 3 2 #") "
0 0 32 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 84
(5
 #";; \345\203\217 expressions \344\270\200\346\240\267"
 #"\357\274\214\345\217\252\346\230\257\347\256\200"
 #"\345\215\225\345\234\260\344\274\240\351\200"
 #"\222\345\222\214\350\260\203\347\224\250 succeed/fail continuation"
) 0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 19 #"execute-application"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 1 #" "
0 0 32 3 4 #"args"
0 0 26 3 1 #" "
0 0 32 3 7 #"succeed"
0 0 26 3 1 #" "
0 0 32 3 4 #"fail"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 38 3 4 #"cond"
0 0 26 3 3 #" [("
0 0 32 3 10 #"primitive?"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 32 3 7 #"succeed"
0 0 26 3 2 #" ("
0 0 32 3 25 #"apply-primitive-procedure"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 1 #" "
0 0 32 3 4 #"args"
0 0 26 3 2 #") "
0 0 32 3 4 #"fail"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 32 3 9 #"compound?"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 32 3 9 #"proc-body"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 3 #") ("
0 0 32 3 10 #"extend-env"
0 0 26 3 2 #" ("
0 0 32 3 11 #"proc-params"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 39 #"                                       "
0 0 32 3 4 #"args"
0 0 26 29 1 #"\n"
0 0 26 3 40 #"                                       ("
0 0 32 3 8 #"proc-env"
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 27 #"                           "
0 0 32 3 7 #"succeed"
0 0 26 29 1 #"\n"
0 0 26 3 27 #"                           "
0 0 32 3 4 #"fail"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 38 3 4 #"else"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 38 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 26 #"\"Unknown procedure type: \""
0 0 26 3 1 #" "
0 0 32 3 4 #"proc"
0 0 26 3 4 #")]))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 7 #";; repl"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 1 #" "
0 0 32 3 22 #"the-global-environment"
0 0 26 3 2 #" ("
0 0 32 3 16 #"setup-global-env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 38 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 4 #"repl"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         112 22 2 #"(\0"
2 #")\0"
21 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"prompt-for-input"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 7 #"newline"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 7 #"newline"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 7 #"display"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 7 #"newline"
7 #"wxtext\0"
3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         102 22 2 #"(\0"
2 #")\0"
19 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"announce-output"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 7 #"newline"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 7 #"display"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 7 #"newline"
7 #"wxtext\0"
3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 10 #"user-print"
0 0 26 3 1 #" "
0 0 32 3 6 #"object"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 32 3 9 #"compound?"
0 0 26 3 1 #" "
0 0 32 3 6 #"object"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 38 3 7 #"display"
0 0 26 3 2 #" ("
0 0 38 3 4 #"list"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 18 #"compound-procedure"
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                       ("
0 0 32 3 11 #"proc-params"
0 0 26 3 1 #" "
0 0 32 3 6 #"object"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                       ("
0 0 32 3 9 #"proc-body"
0 0 26 3 1 #" "
0 0 32 3 6 #"object"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                       "
0 0 38 3 1 #"'"
0 0 14 3 15 #"<procedure-env>"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 38 3 7 #"display"
0 0 26 3 1 #" "
0 0 32 3 6 #"object"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 32 3 4 #"loop"
0 0 26 3 1 #" "
0 0 32 3 9 #"try-again"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 32 3 16 #"prompt-for-input"
0 0 26 3 1 #" "
0 0 20 3 19 #"\";;; M-Eval input:\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 38 3 3 #"let"
0 0 26 3 3 #" (["
0 0 32 3 5 #"input"
0 0 26 3 2 #" ("
0 0 38 3 4 #"read"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 38 3 2 #"if"
0 0 26 3 2 #" ("
0 0 38 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 32 3 5 #"input"
0 0 26 3 1 #" "
0 0 38 3 1 #"'"
0 0 14 3 9 #"try-again"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 32 3 9 #"try-again"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 38 3 5 #"begin"
0 0 26 3 2 #" ("
0 0 38 3 7 #"newline"
0 0 26 3 3 #") ("
0 0 38 3 7 #"display"
0 0 26 3 1 #" "
0 0 20 3 29 #"\";;; Starting a new problem \""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 18 #"                 ("
0 0 32 3 7 #"ambeval"
0 0 26 3 1 #" "
0 0 32 3 5 #"input"
0 0 26 29 1 #"\n"
0 0 26 3 26 #"                          "
0 0 32 3 22 #"the-global-environment"
0 0 26 29 1 #"\n"
0 0 26 3 27 #"                          ("
0 0 38 3 6 #"lambda"
0 0 26 3 2 #" ["
0 0 32 3 3 #"val"
0 0 26 3 1 #" "
0 0 32 3 16 #"next-alternative"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 32 3 15 #"announce-output"
0 0 26 3 1 #" "
0 0 20 3 19 #"\";;; M-Eval value:\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 32 3 10 #"user-print"
0 0 26 3 1 #" "
0 0 32 3 3 #"val"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 32 3 4 #"loop"
0 0 26 3 1 #" "
0 0 32 3 16 #"next-alternative"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 27 #"                          ("
0 0 38 3 6 #"lambda"
0 0 26 3 3 #" []"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 32 3 15 #"announce-output"
0 0 26 3 1 #" "
0 0 20 3 34 #"\";;; There are no more values of \""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 32 3 10 #"user-print"
0 0 26 3 1 #" "
0 0 32 3 5 #"input"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 32 3 4 #"repl"
0 0 26 3 7 #")))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 32 3 4 #"loop"
0 0 26 3 2 #" ("
0 0 38 3 6 #"lambda"
0 0 26 3 3 #" []"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 38 3 7 #"newline"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 38 3 7 #"display"
0 0 26 3 1 #" "
0 0 20 3 33 #"\";;; There is no current problem\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 32 3 4 #"repl"
0 0 26 3 4 #"))))"
0           0
