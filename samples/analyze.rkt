#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 59 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 7 #"Monaco\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 178 178 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 197 110 195 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 224 33 29 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 79 151 215 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.5 0.5 0.5 1 1 1 216 216 216 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 138 255 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 79 151 215 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 42 161 174 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 45 149 116 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 42 161 174 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 164 91 173 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 205 92 92 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 0 0 0 0 0 -1 -1 2
42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 105 105 105 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 224 33 29 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 178 178 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 220 117 47 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 79 151 215 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 220 117 47 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 242 36 31 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 242 36 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 68 0 160 0 0 0 -1 -1
2 31 #"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 163 29 177 0 0 0 -1 -1 2
47 #"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 40 222 240 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 103 177 29 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 220 117 47 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 177 149 29 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 178 178 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 178 178 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 2226 0 29 3 10 #"#lang sicp"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 8 #";; TABLE"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"make-table"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 11 #"local-table"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"*table*"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-1"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 8 #"subtable"
0 0 26 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-1"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 11 #"local-table"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 8 #"subtable"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 6 #"record"
0 0 26 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-2"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 8 #"subtable"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 6 #"record"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 6 #"record"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 18 #"                  "
0 0 14 3 5 #"false"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 12 #"            "
0 0 14 3 5 #"false"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"insert!"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-1"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-2"
0 0 26 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 8 #"subtable"
0 0 26 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-1"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 11 #"local-table"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 8 #"subtable"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 6 #"record"
0 0 26 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-2"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 8 #"subtable"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 6 #"record"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 8 #"set-cdr!"
0 0 26 3 1 #" "
0 0 14 3 6 #"record"
0 0 26 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 8 #"set-cdr!"
0 0 26 3 1 #" "
0 0 14 3 8 #"subtable"
0 0 26 29 1 #"\n"
0 0 26 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-2"
0 0 26 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                  ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 8 #"subtable"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 8 #"set-cdr!"
0 0 26 3 1 #" "
0 0 14 3 11 #"local-table"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                      ("
0 0 14 3 4 #"cons"
0 0 26 3 2 #" ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-1"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 5 #"key-2"
0 0 26 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 11 #"local-table"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"dispatch"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" (("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"lookup-proc"
0 0 26 3 2 #") "
0 0 14 3 6 #"lookup"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"            (("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 12 #"insert-proc!"
0 0 26 3 2 #") "
0 0 14 3 7 #"insert!"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 26 3 2 #" ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 20 #"\"Unknown operation: "
0 0 20 29 1 #"\n"
0 0 20 3 32 #"                          TABLE\""
0 0 26 3 1 #" "
0 0 14 3 1 #"m"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 14 3 8 #"dispatch"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 5 #"table"
0 0 26 3 2 #" ("
0 0 14 3 10 #"make-table"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 3 #"get"
0 0 26 3 2 #" ("
0 0 14 3 5 #"table"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"lookup-proc"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 3 #"put"
0 0 26 3 2 #" ("
0 0 14 3 5 #"table"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 12 #"insert-proc!"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"type"
0 0 26 3 1 #" "
0 0 14 3 3 #"obj"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 26 3 1 #" "
0 0 14 3 3 #"obj"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"obj"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 20 #"\"Bad Tagged Object.\""
0 0 26 3 1 #" "
0 0 14 3 3 #"obj"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"contents"
0 0 26 3 1 #" "
0 0 14 3 3 #"obj"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 26 3 1 #" "
0 0 14 3 3 #"obj"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 3 #"obj"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 20 #"\"Bad Tagged Object.\""
0 0 26 3 1 #" "
0 0 14 3 3 #"obj"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 12 #";; PRIMITIVE"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 5 #"prims"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         562 22 2 #"(\0"
2 #")\0"
111 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"st"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"cadr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"cadr"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #">"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #">"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"<"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"<"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"assoc"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"assoc"
7 #"wxtext\0"
3 2 #"))"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"prim-names"
0 0 26 3 3 #") ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"prims"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"prim-procs"
0 0 26 3 3 #") ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"p"
0 0 26 3 3 #") ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"prim"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 4 #"))) "
0 0 14 3 5 #"prims"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"primitive?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 4 #"prim"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"apply-prim"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #") "
0 0 14 3 4 #"args"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 6 #";; ENV"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"make-frame"
0 0 26 3 1 #" "
0 0 14 3 4 #"vars"
0 0 26 3 1 #" "
0 0 14 3 4 #"vals"
0 0 26 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 4 #"vars"
0 0 26 3 1 #" "
0 0 14 3 4 #"vals"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"frame-vars"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 3 #") ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"frame-vals"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 9 #"empty-env"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 26 3 3 #"())"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"first-frame"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #") ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"external-env"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"bind!"
0 0 26 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #" "
0 0 14 3 3 #"val"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 8 #"set-car!"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 8 #"set-cdr!"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 3 #"val"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 5 #"frame"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 19 #"set-variable-value!"
0 0 26 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #" "
0 0 14 3 3 #"val"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         522 22 2 #"(\0"
2 #")\0"
103 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"external-env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"set-car!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"val"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"empty-env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"\"Unbound variable: \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"first-frame"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"frame-vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 10 #"frame-vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 4 #"loop"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 16 3 16 #"define-variable!"
0 0 26 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #" "
0 0 14 3 3 #"val"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         422 22 2 #"(\0"
2 #")\0"
83 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"le"
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"first-frame"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 5 #"bind!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"val"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 8 #"set-car!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"val"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"frame-vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 10 #"frame-vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"frame"
7 #"wxtext\0"
3 3 #")))"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 21 #"lookup-variable-value"
0 0 26 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         552 22 2 #"(\0"
2 #")\0"
109 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"external-env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"           ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"\"Unbound variable: \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"var"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"           ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 5 #"scope"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"first-frame"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 4 #"scan"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"frame-vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"scope"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                   ("
7 #"wxtext\0"
3 10 #"frame-vals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"scope"
7 #"wxtext\0"
3 6 #")))]))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 4 #"loop"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 26 3 1 #" "
0 0 14 3 4 #"vars"
0 0 26 3 1 #" "
0 0 14 3 4 #"vals"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         207 22 2 #"(\0"
2 #")\0"
40 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"co"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"length"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"length"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-frame"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 27 #"\"Too many / Too few args: \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vars"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"vals"
7 #"wxtext\0"
3 3 #")])"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 16 #"setup-global-env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         207 22 2 #"(\0"
2 #")\0"
40 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"le"
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 8 #"builtins"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"extend-env"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"prim-names"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 10 #"prim-procs"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 9 #"empty-env"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 16 #"define-variable!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"builtins"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 16 #"define-variable!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"builtins"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
3 8 #"builtins"
7 #"wxtext\0"
3 1 #")"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 11 #";; COMPOUND"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"make-proc"
0 0 26 3 1 #" "
0 0 14 3 6 #"params"
0 0 26 3 1 #" "
0 0 14 3 4 #"body"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #") ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 6 #"params"
0 0 26 3 1 #" "
0 0 14 3 4 #"body"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"compound?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 4 #"proc"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"proc-params"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"proc-body"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"proc-env"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 6 #"cadddr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 9 #";; HELPER"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 13 #"sequence->exp"
0 0 26 3 1 #" "
0 0 14 3 3 #"seq"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         177 22 2 #"(\0"
2 #")\0"
34 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"co"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"seq"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"seq"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"seq"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"seq"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"begin"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"seq"
7 #"wxtext\0"
3 3 #")])"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"cond->if"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"make-if"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 1 #" "
0 0 14 3 1 #"c"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"expand-cond"
0 0 26 3 1 #" "
0 0 14 3 7 #"clauses"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 7 #"clauses"
0 0 26 3 2 #") "
0 0 22 3 2 #"#f"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 5 #"first"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 7 #"clauses"
0 0 26 3 4 #")] ["
0 0 14 3 4 #"rest"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 7 #"clauses"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"first"
0 0 26 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 4 #"else"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 4 #"rest"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 13 #"sequence->exp"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 5 #"first"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 20 #"\"Clauses after else\""
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 7 #"make-if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"first"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                       ("
0 0 14 3 13 #"sequence->exp"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 5 #"first"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                       ("
0 0 14 3 11 #"expand-cond"
0 0 26 3 1 #" "
0 0 14 3 4 #"rest"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 11 #"expand-cond"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 16 #"self-evaluating?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" [("
0 0 14 3 7 #"number?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #") "
0 0 22 3 2 #"#t"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 7 #"string?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #") "
0 0 22 3 2 #"#t"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 26 3 1 #" "
0 0 22 3 2 #"#f"
0 0 26 3 3 #"]))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"variable?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 7 #"symbol?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 6 #"quote?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"quote"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"assignment?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"set!"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 16 3 11 #"definition?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 3 #"if?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"lambda?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 16 3 6 #"begin?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 16 3 5 #"begin"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"cond?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 16 3 4 #"cond"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"application?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 5 #"pair?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 14 #"list-of-values"
0 0 26 3 1 #" "
0 0 14 3 8 #"operands"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         197 22 2 #"(\0"
2 #")\0"
38 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 1 #"o"
7 #"wxtext\0"
3 2 #"nd"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"operands"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"()]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"meta-eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"operands"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"               ("
7 #"wxtext\0"
3 14 #"list-of-values"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"operands"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 4 #"))])"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 13 #"eval-sequence"
0 0 26 3 1 #" "
0 0 14 3 4 #"exps"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 10         227 22 2 #"(\0"
2 #")\0"
44 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 1 #"o"
7 #"wxtext\0"
3 2 #"nd"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"exps"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 9 #"meta-eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"exps"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 9 #"meta-eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"exps"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 13 #"eval-sequence"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"exps"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #")])"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 11 #";; ANALYZER"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"analyze-self"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 14 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 16 #"analyze-variable"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 3 #") ("
0 0 14 3 21 #"lookup-variable-value"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 13 #"analyze-quote"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 4 #"qval"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 14 3 4 #"qval"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 18 #"analyze-assignment"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 3 #"var"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 5 #"vproc"
0 0 26 3 2 #" ("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 19 #"set-variable-value!"
0 0 26 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 2 #" ("
0 0 14 3 5 #"vproc"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 11 #"make-lambda"
0 0 26 3 1 #" "
0 0 14 3 6 #"params"
0 0 26 3 1 #" "
0 0 14 3 4 #"body"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 6 #"params"
0 0 26 3 1 #" "
0 0 14 3 4 #"body"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 16 3 19 #"definition-variable"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"caadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 16 3 16 #"definition-value"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"caddr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 11 #"make-lambda"
0 0 26 3 2 #" ("
0 0 14 3 5 #"cdadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 4 #"cddr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 18 #"analyze-definition"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 3 #"var"
0 0 26 3 2 #" ("
0 0 16 3 19 #"definition-variable"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 5 #"vproc"
0 0 26 3 2 #" ("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 2 #" ("
0 0 16 3 16 #"definition-value"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 16 #"define-variable!"
0 0 26 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 2 #" ("
0 0 14 3 5 #"vproc"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 10 #"analyze-if"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 5 #"pproc"
0 0 26 3 2 #" ("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 5 #"cproc"
0 0 26 3 2 #" ("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 5 #"aproc"
0 0 26 3 2 #" ("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"pproc"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 5 #"cproc"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 5 #"aproc"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 14 #"analyze-lambda"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 4 #"vars"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 5 #"bproc"
0 0 26 3 2 #" ("
0 0 14 3 16 #"analyze-sequence"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cddr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 9 #"make-proc"
0 0 26 3 1 #" "
0 0 14 3 4 #"vars"
0 0 26 3 1 #" "
0 0 14 3 5 #"bproc"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 16 #"analyze-sequence"
0 0 26 3 1 #" "
0 0 14 3 4 #"exps"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"sequentially"
0 0 26 3 1 #" "
0 0 14 3 2 #"p1"
0 0 26 3 1 #" "
0 0 14 3 2 #"p2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 3 #") ("
0 0 14 3 2 #"p1"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #") ("
0 0 14 3 2 #"p2"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"loop"
0 0 26 3 1 #" "
0 0 14 3 7 #"first-p"
0 0 26 3 1 #" "
0 0 14 3 6 #"rest-p"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 6 #"rest-p"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 7 #"first-p"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"loop"
0 0 26 3 2 #" ("
0 0 14 3 12 #"sequentially"
0 0 26 3 1 #" "
0 0 14 3 7 #"first-p"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 6 #"rest-p"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 6 #"rest-p"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 5 #"procs"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 12 #"meta-analyze"
0 0 26 3 1 #" "
0 0 14 3 4 #"exps"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 5 #"procs"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 42 #"\"An empty sequence expression to analyze.\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"loop"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"procs"
0 0 26 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 5 #"procs"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 19 #"analyze-application"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 4 #"args"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 1 #" "
0 0 14 3 12 #"meta-analyze"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 12 #"meta-execute"
0 0 26 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                    ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"arg"
0 0 26 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")) "
0 0 14 3 4 #"args"
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 18 #";; ANALYZE-EXECUTE"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"meta-eval"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  (("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" [("
0 0 14 3 16 #"self-evaluating?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 12 #"analyze-self"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 9 #"variable?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 16 #"analyze-variable"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 6 #"quote?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 13 #"analyze-quote"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 11 #"assignment?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 18 #"analyze-assignment"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 16 3 11 #"definition?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 18 #"analyze-definition"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 3 #"if?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 10 #"analyze-if"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 7 #"lambda?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 14 #"analyze-lambda"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 16 3 6 #"begin?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 16 #"analyze-sequence"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 5 #"cond?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 12 #"meta-analyze"
0 0 26 3 2 #" ("
0 0 14 3 8 #"cond->if"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 12 #"application?"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 3 #") ("
0 0 14 3 19 #"analyze-application"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 26 3 2 #" ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 7 #"Unknown"
0 0 20 3 1 #" "
0 0 20 3 4 #"type"
0 0 20 3 1 #" "
0 0 20 3 2 #"of"
0 0 20 3 1 #" "
0 0 20 3 12 #"expression: "
0 0 20 3 1 #"\""
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 4 #")]))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"meta-execute"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 26 3 3 #" [("
0 0 14 3 10 #"primitive?"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 10 #"apply-prim"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        [("
0 0 14 3 9 #"compound?"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 9 #"proc-body"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 10 #"extend-env"
0 0 26 3 2 #" ("
0 0 14 3 11 #"proc-params"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 2 #") "
0 0 14 3 4 #"args"
0 0 26 3 2 #" ("
0 0 14 3 8 #"proc-env"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 4 #")))]"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 5 #"error"
0 0 26 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 7 #"Unkonwn"
0 0 20 3 1 #" "
0 0 20 3 11 #"procedure: "
0 0 20 3 1 #"\""
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 4 #")]))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 7 #";; TEST"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 10 #"global-env"
0 0 26 3 2 #" ("
0 0 14 3 16 #"setup-global-env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 9 #"repl-loop"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 26 3 1 #" "
0 0 20 3 4 #"\"<<<"
0 0 20 3 1 #"\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 2 #"in"
0 0 26 3 2 #" ("
0 0 14 3 4 #"read"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 3 #"out"
0 0 26 3 2 #" ("
0 0 14 3 9 #"meta-eval"
0 0 26 3 1 #" "
0 0 14 3 2 #"in"
0 0 26 3 1 #" "
0 0 14 3 10 #"global-env"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 7 #"display"
0 0 26 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 4 #">>>\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 7 #"newline"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 7 #"display"
0 0 26 3 1 #" "
0 0 14 3 3 #"out"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 9 #"repl-loop"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 12 #";(repl-loop)"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 2 #"'3"
0 0 18 3 1 #" "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"x"
0 0 18 3 2 #" ("
0 0 18 3 10 #"extend-env"
0 0 18 3 2 #" ("
0 0 18 3 4 #"list"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"y"
0 0 18 3 3 #") ("
0 0 18 3 4 #"list"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 1 #" "
0 0 18 3 1 #"4"
0 0 18 3 2 #") "
0 0 18 3 12 #"global-env))"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 5 #"quote"
0 0 18 3 2 #" ("
0 0 18 3 4 #"cons"
0 0 18 3 1 #" "
0 0 18 3 1 #"1"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 3 #")) "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 2 #"''"
0 0 18 3 1 #"a"
0 0 18 3 1 #" "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 5 #"begin"
0 0 18 3 2 #" ("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 1 #"z"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 3 #") ("
0 0 18 3 4 #"set!"
0 0 18 3 1 #" "
0 0 18 3 1 #"z"
0 0 18 3 1 #" "
0 0 18 3 2 #"23"
0 0 18 3 3 #")) "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 5 #"begin"
0 0 18 3 2 #" ("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 3 #") ("
0 0 18 3 4 #"set!"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 2 #"35"
0 0 18 3 3 #")) "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 2 #" ("
0 0 18 3 3 #"inc"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 3 #") ("
0 0 18 3 1 #"+"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"1"
0 0 18 3 3 #")) "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 2 #"(("
0 0 18 3 6 #"lambda"
0 0 18 3 2 #" ("
0 0 18 3 1 #"y"
0 0 18 3 3 #") ("
0 0 18 3 1 #"+"
0 0 18 3 1 #" "
0 0 18 3 1 #"3"
0 0 18 3 1 #" "
0 0 18 3 1 #"y"
0 0 18 3 3 #")) "
0 0 18 3 1 #"4"
0 0 18 3 2 #") "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 3 #"((("
0 0 18 3 6 #"lambda"
0 0 18 3 2 #" ("
0 0 18 3 1 #"x"
0 0 18 3 3 #") ("
0 0 18 3 6 #"lambda"
0 0 18 3 2 #" ("
0 0 18 3 1 #"y"
0 0 18 3 3 #") ("
0 0 18 3 1 #"+"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"y"
0 0 18 3 4 #"))) "
0 0 18 3 1 #"3"
0 0 18 3 2 #") "
0 0 18 3 1 #"4"
0 0 18 3 2 #") "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 2 #"if"
0 0 18 3 2 #" ("
0 0 18 3 1 #"="
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 2 #") "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"z"
0 0 18 3 2 #") "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 4 #"cond"
0 0 18 3 3 #" (("
0 0 18 3 1 #"="
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 2 #") "
0 0 18 3 2 #"'0"
0 0 18 3 4 #") (("
0 0 18 3 1 #">"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 2 #") "
0 0 18 3 1 #"'"
0 0 18 3 1 #"x"
0 0 18 3 3 #") ("
0 0 18 3 4 #"else"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"z"
0 0 18 3 3 #")) "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 4 #"cond"
0 0 18 3 3 #" (("
0 0 18 3 1 #"<"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"z"
0 0 18 3 2 #") "
0 0 18 3 1 #"'"
0 0 18 3 1 #"x"
0 0 18 3 3 #") ("
0 0 18 3 4 #"else"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"z"
0 0 18 3 3 #")) "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 1 #"+"
0 0 18 3 1 #" "
0 0 18 3 1 #"7"
0 0 18 3 1 #" "
0 0 18 3 2 #"11"
0 0 18 3 2 #") "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"("
0 0 18 3 9 #"meta-eval"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 1 #"("
0 0 18 3 3 #"inc"
0 0 18 3 1 #" "
0 0 18 3 3 #"100"
0 0 18 3 2 #") "
0 0 18 3 11 #"global-env)"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"meta-eval"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 4 #"loop"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 3 #") ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 1 #">"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 22 3 1 #"0"
0 0 26 3 3 #") ("
0 0 14 3 4 #"loop"
0 0 26 3 2 #" ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"n"
0 0 26 3 1 #" "
0 0 22 3 1 #"1"
0 0 26 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 26 3 3 #")) "
0 0 14 3 10 #"global-env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 9 #"meta-eval"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 4 #"loop"
0 0 26 3 1 #" "
0 0 22 3 7 #"1000000"
0 0 26 3 2 #") "
0 0 14 3 10 #"global-env"
0 0 26 3 1 #")"
0           0
